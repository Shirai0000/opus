#pragma once
//----------------------------------------------------------------
//	Ｃ＋＋言語：
//		サンプル・プログラム
//	概要：
//		CSVデータを扱うクラス
//
//	2022 HAL Osaka
//----------------------------------------------------------------
#include	<vector>

//----------------------------------------------------------------
//	CSVデータを扱うクラス
//		CSVファイル（文字）を読み込み、数字文字列から数値データ（整数）に変換する
//
class Csv {
private:
	std::vector<int>* p_vec;	//データ本体。int型の可変長配列
	const char* const file_path;	//CSVファイルのパス(ファイル名)
public:
	//----------------
	//コンストラクタ
	//	_file_name：読み込むファイル名（ファイルパス）を指定する
	Csv(const char* const _file_name)
		:file_path{ _file_name }, p_vec{nullptr}
	{
	}

	//----------------
	//デストラクタ
	virtual ~Csv() {
		if (this->p_vec != nullptr) {
			delete this->p_vec;	//確保したデータバッファ（int型可変長配列）を削除する
			this->p_vec = nullptr;	//削除したのでnullptrを入れておく
		}
	}

	//----------------
	//読み込んだデータのアドレスをint型可変長配列のポインタとして返す
	inline int* data(void) const { return this->p_vec->data();}

	//----------------
	//読み込んだデータの要素数を取得
	inline const size_t size(void) const { return this->p_vec->size();}

	//----------------
	//コンストラクタで指定されたCSVファイルからデータを読み込む。
	int read(void);

	//----------------
	//csvファイルにデータを書き出す。
	//int write(void){/*未実装*/}
};	//Csv

//----------------------------------------------------------------
//	2022 HAL Osaka
//----------------------------------------------------------------
